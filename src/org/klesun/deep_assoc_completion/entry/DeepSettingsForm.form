<?xml version="1.0" encoding="UTF-8"?>
<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="org.klesun.deep_assoc_completion.entry.DeepSettingsForm">
  <grid id="27dc6" binding="rootPanel" layout-manager="GridLayoutManager" row-count="9" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
    <margin top="0" left="0" bottom="0" right="0"/>
    <constraints>
      <xy x="20" y="20" width="500" height="400"/>
    </constraints>
    <properties/>
    <border type="none"/>
    <children>
      <component id="c80ba" class="javax.swing.JSeparator">
        <constraints>
          <grid row="8" column="0" row-span="1" col-span="2" vsize-policy="6" hsize-policy="6" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties/>
      </component>
      <component id="c8955" class="javax.swing.JCheckBox" binding="bgTypePvdrEnabled">
        <constraints>
          <grid row="0" column="0" row-span="1" col-span="2" vsize-policy="0" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties>
          <text value="Enable Background Deep Type Provider"/>
          <toolTipText value="Reported to cause lags in Laravel projects, so disabled by default. This feature gives IDEA the type info of object passed to a closure, taken from an associative array, assigned to a field in a setter, etc... Reduces a lot of &quot;undefined method&quot; inspection errors without the need of phpdoc-ing every line in the porject."/>
        </properties>
      </component>
      <component id="69b5d" class="javax.swing.JLabel">
        <constraints>
          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties>
          <labelFor value="b89b0"/>
          <text value="Background Deep Type Provider depth limit"/>
          <toolTipText value="This gives IDEA the type info of object passed to a closure, taken from an associative array, assigned to a field in a setter, etc... Reduces a lot of &quot;undefined method&quot; inspection errors without the need of phpdoc-ing every line in the porject."/>
        </properties>
      </component>
      <component id="b89b0" class="javax.swing.JFormattedTextField" binding="bgTypePvdrDepthLimit">
        <constraints>
          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="6" anchor="8" fill="1" indent="0" use-parent-layout="false">
            <preferred-size width="150" height="-1"/>
          </grid>
        </constraints>
        <properties>
          <text value="5"/>
          <toolTipText value="This gives IDEA the type info of object passed to a closure, taken from an associative array, assigned to a field in a setter, etc... Reduces a lot of &quot;undefined method&quot; inspection errors without the need of phpdoc-ing every line in the porject."/>
        </properties>
      </component>
      <component id="21a36" class="javax.swing.JLabel">
        <constraints>
          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties>
          <labelFor value="3d89c"/>
          <text value="Explicit user action completion depth limit"/>
          <toolTipText value="Ctrl+Space, Ctrl+Click, Ctrl+B, etc... You can increase this value if you don't get completion from an array created in a function inside another function inside another function..."/>
        </properties>
      </component>
      <component id="3d89c" class="javax.swing.JFormattedTextField" binding="explicitDepthLimit">
        <constraints>
          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="6" anchor="8" fill="1" indent="0" use-parent-layout="false">
            <preferred-size width="150" height="-1"/>
          </grid>
        </constraints>
        <properties>
          <text value="40"/>
        </properties>
      </component>
      <component id="53a58" class="javax.swing.JLabel">
        <constraints>
          <grid row="4" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties>
          <labelFor value="43abc"/>
          <text value="Auto-popup completion depth limit"/>
          <toolTipText value="When you just start typing [] or ''. You can decrease this value or set to 0 if you get lags when typing quotes"/>
        </properties>
      </component>
      <component id="43abc" class="javax.swing.JFormattedTextField" binding="implicitDepthLimit">
        <constraints>
          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="6" anchor="8" fill="1" indent="0" use-parent-layout="false">
            <preferred-size width="150" height="-1"/>
          </grid>
        </constraints>
        <properties>
          <text value="25"/>
        </properties>
      </component>
      <component id="2c72a" class="javax.swing.JLabel">
        <constraints>
          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties>
          <labelFor value="b89b0"/>
          <text value="Background Deep Type Provider timoeut (ms)"/>
          <toolTipText value="If you sometimes see &quot;undefined method...&quot; error, then change something and error disappears, you may want to increase this value"/>
        </properties>
      </component>
      <component id="75c35" class="javax.swing.JFormattedTextField" binding="bgTypePvdrTimeout">
        <constraints>
          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="6" anchor="8" fill="1" indent="0" use-parent-layout="false">
            <preferred-size width="150" height="-1"/>
          </grid>
        </constraints>
        <properties>
          <text value="100"/>
        </properties>
      </component>
      <component id="fa97f" class="javax.swing.JCheckBox" binding="removeUnusedImportsOnSaveEnabled">
        <constraints>
          <grid row="6" column="0" row-span="1" col-span="2" vsize-policy="0" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties>
          <text value="Remove unused use-s on save"/>
          <toolTipText value="Did not find such option in IDEA settings, so wrote my own implementation. It just removes greyed use-s without doing sorting or anything else that screws formatting in your project."/>
        </properties>
      </component>
      <component id="7bd" class="javax.swing.JLabel">
        <constraints>
          <grid row="5" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties>
          <labelFor value="43abc"/>
          <text value="Total expression limit"/>
          <toolTipText value="How many expressions plugin is allowed to evaluate. Unlike depth limit, this guard takes care of resolution where recursion forks on each step. "/>
        </properties>
      </component>
      <component id="3aca" class="javax.swing.JFormattedTextField" binding="totalExpressionLimit">
        <constraints>
          <grid row="5" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="6" anchor="8" fill="1" indent="0" use-parent-layout="false">
            <preferred-size width="150" height="-1"/>
          </grid>
        </constraints>
        <properties>
          <text value="10000"/>
        </properties>
      </component>
      <component id="d1f24" class="javax.swing.JCheckBox" binding="passArgsToImplementations">
        <constraints>
          <grid row="7" column="0" row-span="1" col-span="2" vsize-policy="0" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties>
          <enabled value="true"/>
          <text value="Pass args to interface implementations"/>
          <toolTipText value="When we only know the interface of called method, not the actual class, plugin takes all it's implementations and uses them to infer return type. This flag affects whether or not args passed to the method are taken into account during resolution. May dramatically decrease performance in Laravel projects."/>
        </properties>
      </component>
    </children>
  </grid>
</form>
